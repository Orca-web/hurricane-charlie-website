// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    navData={
      Array [
        Object {
          "id": 0,
          "name": [Function],
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <li>
          <NavLink
            activeClassName="active"
            activeStyle={
              Object {
                "borderBottom": "3px solid #FF2E63",
              }
            }
            ariaCurrent="true"
            exact={true}
            to={undefined}
          >
            [Function]
          </NavLink>
        </li>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            activeStyle={
              Object {
                "borderBottom": "3px solid #FF2E63",
              }
            }
            ariaCurrent="true"
            exact={true}
            to={undefined}
          >
            [Function]
          </NavLink>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "activeStyle": Object {
              "borderBottom": "3px solid #FF2E63",
            },
            "ariaCurrent": "true",
            "children": [Function],
            "exact": true,
            "to": undefined,
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": "li",
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li>
            <NavLink
              activeClassName="active"
              activeStyle={
                Object {
                  "borderBottom": "3px solid #FF2E63",
                }
              }
              ariaCurrent="true"
              exact={true}
              to={undefined}
            >
              [Function]
            </NavLink>
          </li>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              activeStyle={
                Object {
                  "borderBottom": "3px solid #FF2E63",
                }
              }
              ariaCurrent="true"
              exact={true}
              to={undefined}
            >
              [Function]
            </NavLink>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "activeStyle": Object {
                "borderBottom": "3px solid #FF2E63",
              },
              "ariaCurrent": "true",
              "children": [Function],
              "exact": true,
              "to": undefined,
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
